#------------------------Тест while, break и continue------------------------------
/*
var i = 0;

while(true) {
    i = i + 1;

    if(i == 5) {
        continue;
    }

    print(i);

    if(i > 10) {
        break;
    }
}
*/
#----------------------------------------------------------------------------------

#-------------------------Тест встроенных функций----------------------------------
/*
var sin = sin(3.14159 / 2);
print(sin);

var cos = cos(3.14159);
print(cos);

println(1, 2, true, false, sin(34), cos(3.14159), "qwerty");
*/
#----------------------------------------------------------------------------------

#----------------Вывод простых чисел до ста, длинная версия------------------------
/*
function primary() {
    var number = 1;

    while(number <= 100) {
        var sqrt = sqrt(number);
        var i = 2;
        var flag = false;

        while(i <= sqrt) {
            if(number % i == 0) {
                flag = true;
                break;
            }

            i = i + 1;
        }

        if(!flag) {
            print(number);
        }

        number = number + 1;
    }
}

primary();
*/
#----------------------------------------------------------------------------------

#------Определение функции и инициализация переменной возвращаемым значением-------
/*
function sum1() {
    return(42);
}

function sum2(a) {
    return(a + 42);
}

function sum3(a, b, c) {
    return(a + b + c);
}

var s1 = sum1();
var s2 = sum2(2);
var s3 = sum3(2, 5, 7);

print(s1, " ", s2, " ", s3);
println();
*/
#----------------------------------------------------------------------------------

#----------------Вывод простых чисел до ста, короткая версия-----------------------
/*
function isPrimary(n) {
    for(var i = 2; i <= sqrt(n); i = i + 1)
        if(n % i == 0)
            return false;
    return true;
}

for(var j = 2; j <= 100; j = j + 1)
    if(isPrimary(j))
        print(j);
*/
#----------------------------------------------------------------------------------

#----------------------Тест do while, break и continue-----------------------------
/*
var a = 10;

do {
	a -= 1;

	if (a == 5) {
		continue;
	}

	if (a == 0) {
		break;
	}

	println(a);
} while(a > 0);
*/
#----------------------------------------------------------------------------------

#----------------Определение и вызов функции в функции-----------------------------
/*
function fun() {
    function fun1() {
		println("fun1()");
        return;

		println("It should not be printed");
    }

    print(fun1());
}

fun();
*/
#----------------------------------------------------------------------------------

#---Составные присваивания, однострочные определения и инициализация переменных----
/*
var a = 1, b = 2, c = 3;

println(a, b, c);
println();

a = 4, b = 5, c = 6;

println(a, b, c);
println();

b += 45, c *= 5;

println(b, c);
*/
#----------------------------------------------------------------------------------

#------------------Рекурсивное вычисление факториала-------------------------------
/*
function fact(n) {
    if (n > 1)
        return n * fact(n - 1);
    else
        return 1;
}

println(fact(5));
*/
#----------------------------------------------------------------------------------

#---------------------------------Проверка объектов--------------------------------
/*
var furry = {
	name: "Tony",
	obj: {
		a: 1
	}
};

print(furry);
println();

print("furry[\"name\"] = ", furry["name"]);
println();

print("furry.name = ", furry.name);
println();

furry.name = "Tony1";
print("furry.name = ", furry.name);
println();

furry["name"] = "Tony2";
print("furry[\"name\"] = ", furry["name"]);
println();

furry.obj.a = 2;
print("furry.obj.a = ", furry.obj.a);
println();

furry["obj"]["a"] = 3;
print("furry[\"obj\"][\"a\"] = ", furry["obj"]["a"]);
println();
*/
#----------------------------------------------------------------------------------

#---------------------------------Проверка массивов--------------------------------
/*
var array = [];
println(array);

array = [1];
println(array);

array = [1, 2, 4, 6, 7, "weqe", sin(3.14159 / 2)];
println(array);

array[0] = 45;
println(array);

array[1] = "text", array[0] += 20;
println(array);

println(array[2] * 5);

array = [1, [2, [3]]];
println(array);

array[1][1][0] = 5;
println(array);

var array1 = array;
println(array1);

array1[1][1][0] = 94;
println(array1);

println(array);

var array3 = [1, [1, 2, [0, 7]]];
println(array3);
println(array3[1][2][1]);

array3[1][2][1] += 10;
println(array3[1][2][1]);
*/
#----------------------------------------------------------------------------------

#--------------------------------Константы-----------------------------------------
/*
var const constVar = 42;
var const constVar = 69;
println(constVar);
#constVar = 43;      <---- Error

var const array = [1, 2, 3];
println(array);
#array[1] = 42;      <---- Error

var value = array[1];
println(value);

var const obj = {a: 4, b: "42"};
println(obj);
#obj.a = 6;          <---- Error

value = obj.a;
println(value);
*/
#----------------------------------------------------------------------------------

#------------------------------------Проверка строк--------------------------------

var string1 = "string \" string 123 '' ";
println(string1);

var string2 = 'string \' str"ing \' ';
println(string2);

#----------------------------------------------------------------------------------

#--------------------------Пузырьковая сортировка----------------------------------
/*
var sort = [5, 2, 8, 6, 9, 1, 3, 7, 4, 0];
var size = 10;
println(sort);
println();

for(var i = 0; i < size - 1; i += 1) {
    for(var j = 0; j < size - i - 1; j += 1) {
        if(sort[j] > sort[j + 1]) {
            var temp = sort[j];
            sort[j] = sort[j + 1];
            sort[j + 1] = temp;
            println(sort);
        }
    }
}

println();
println(sort);
*/
#----------------------------------------------------------------------------------

#--------------------------Тест вызова функции до ее поределения-------------------
/*
println(func());

function func() {
    return(func1() + 3);
}

function func1() {
    var a = 5;

    function func2() {
        return(5 + a);
    }

    return func2();
}

#println(func());
*/
#----------------------------------------------------------------------------------